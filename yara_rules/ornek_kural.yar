
import "math"
import "pe"
rule Detect_Wexize_Revamp_PDB
{
    meta:
        description = "Detects the specific PDB path for Wexize Revamp"
        author = "Cascade"
    strings:
        $pdb_path = "C:\\Users\\alsia\\Desktop\\!Project 2\\!Project\\x64\\Release\\Wexize Revamp.pdb" wide ascii
    condition:
       $pdb_path
}

rule Packed_With_UPX
{
    meta:
        Author = "alsia "
    strings:
        $section1 = "UPX0"
        $section2 = "UPX1"
        $section3 = "UPX2"
        $versionId = "UPX!"
    condition:
        any of ($*)
}

rule Packed_High_Entropy
{
    meta:
        Author = "alsia "
    condition:
        // Check for PE file magic bytes
        uint32(0) == 0x5A4D and
        // Check for high entropy in the whole file
        math.entropy(0, filesize) >= 7.0
}
rule xrc_free_public {
     strings:
        $xrc_specific1 = "(Auto-disabled ImGuiDebugLogFlags_EventClipper to avoid spamming)"
        $xrc_specific2 = "r\\x64\\Release\\Fivem-External.pdb"
        $xrc_specific3 = "flag-checkered"
        $xrc_specific4 = "_get_stream_buffer_pointers"

        $xrc_hex_string1 = { 28  41  75  74  6F  2D  64  69  73  61  62  6C  65  64  20  49  6D  47  75  69  44  65  62  75  67  4C  6F  67  46  6C  61  67 73  5F  45  76  65  6E  74  43  6C  69  70  70  65  72  20  74 6F  20  61  76  6F  69  64  20  73  70  61  6D  6D  69  6E  67 29 }
        $xrc_hex_string2 = { 72  5C  78  36  34  5C  52  65  6C  65  61  73  65  5C  46  69 76  65  6D  2D  45  78  74  65  72  6E  61  6C  2E  70  64  62 }
        $xrc_hex_string3 = { 66  6C  61  67  2D  63  68  65  63  6B  65  72  65  64 }
        $xrc_hex_string4 = { 5F  67  65  74  5F  73  74  72  65  61  6D  5F  62  75  66  66  65 72  5F  70  6F  69  6E  74  65  72  73 }

        $xrc_match_string1 = "<security>"
        $xrc_match_string2 = "<requestedPrivileges>"
        $xrc_match_string3 = "</security>"
        $xrc_match_string4 = "<requestedExecutionLevel level='requireAdministrator' uiAccess='false' />"

    condition:
        (2 of ($xrc_specific*) and 2 of ($xrc_hex_string*) and 1 of ($xrc_match_string*))
} 
rule Generic_free_cheat {
strings:
        $manifest1 = "<requestedExecutionLevel level='requireAdministrator'" ascii wide
        $manifest2 = "<security>" ascii wide
        $manifest3 = "<requestedPrivileges>" ascii wide
        $manifest4 = "</security>" ascii wide

        $class1 = ".?AVruntime_error@std@@" ascii
        $class2 = ".?AVbad_alloc@std@@" ascii
        $class3 = ".?AVexception@std@@" ascii
        $class4 = ".?AVsystem_error@std@@" ascii

        $json1 = "json_abi_v3_11_3@nlohmann@@" ascii
        $json2 = "parse_error@detail" ascii
        $json3 = "type_error@detail" ascii

        $io1 = ".?AV?$basic_filebuf@" ascii
        $io2 = ".?AV?$basic_ifstream@" ascii
        $io3 = ".?AVios_base@std@@" ascii

        $icon1 = "icomoon" ascii wide
        $icon2 = "Font generated by IcoMoon" ascii wide

    condition:
        uint16(0) == 0x5A4D and 
        filesize < 15000000 and
        (
            3 of ($manifest*) and
            2 of ($class*) and
            (
                2 of ($json*) or
                2 of ($io*)
            ) and
            any of ($icon*)
        )
}

rule generic_cheat_v1 {
    meta:
        Author = "/alsia "
    strings:
        $stringExe = "!This program cannot be run in DOS mode."
        $string1 = "dagger"
        $string2 = "bottle"
        $string3 = "crowbar"
        $string4 = "unarmed"
        $string5 = "flashlight"
        $string6 = "golfclub"
        $string7 = "hammer"
        $string8 = "hatchet"
        $string9 = "knuckle"
        $string10 = "knife"
        $string11 = "machete"
        $string12 = "switchblade"
        $string13 = "nightstick"
        $string14 = "wrench"
        $string15 = "battleaxe"
        $string16 = "poolcue"
        $string17 = "stone_hatchet"
        $string18 = "pistol"
        $string19 = "pistol_mk2"
        $string20 = "combatpistol"
        $string21 = "appistol"
        $string22 = "stungun"
        $string23 = "pistol50"
        $string24 = "snspistol"
        $string25 = "snspistol_mk2"
        $string26 = "heavypistol"
        $string27 = "vintagepistol"
        $string28 = "flaregun"
        $string29 = "marksmanpistol"
        $string30 = "revolver"
        $string31 = "revolver_mk2"
        $string32 = "doubleaction"
        $string33 = "raypistol"
        $string34 = "ceramicpistol"
        $string35 = "navyrevolver"
        $string36 = "microsmg"
        $string37 = "smg_mk2"
        $string38 = "assaultsmg"
        $string39 = "combatpdw"
        $string40 = "machinepistol"
        $string41 = "minismg"
        $string42 = "raycarbine"
        $string43 = "pumpshotgun"
        $string44 = "pumpshotgun_mk2"
        $string45 = "sawnoffshotgun"
        $string46 = "assaultshotgun"
        $string47 = "bullpupshotgun"
        $string48 = "musket"
        $string49 = "heavyshotgun"
        $string50 = "dbshotgun"
        $string51 = "autoshotgun"
        $string52 = "assaultrifle"
        $string53 = "assaultrifle_mk2"
        $string54 = "carbinerifle"
        $string55 = "carbinerifle_mk2"
        $string56 = "advancedrifle"
        $string57 = "specialcarbine"
        $string58 = "specialcarbine_mk2"
        $string59 = "bullpuprifle"
        $string60 = "bullpuprifle_mk2"
        $string61 = "compactrifle"
        $string62 = "combatmg"
        $string63 = "combatmg_mk2"
        $string64 = "gusenberg"
        $string65 = "sniperrifle"
        $string66 = "heavysniper"
        $string67 = "heavysniper_mk2"
        $string68 = "marksmanrifle"
        $string69 = "marksmanrifle_mk2"
        $string70 = "grenadelauncher"
        $string71 = "grenadelauncher_smoke"
        $string72 = "minigun"
        $string73 = "firework"
        $string74 = "railgun"
        $string75 = "hominglauncher"
        $string76 = "compactlauncher"
        $string77 = "rayminigun"
        $string78 = "grenade"
        $string79 = "bzgas"
        $string80 = "smokegrenade"
        $string81 = "flare"
        $string82 = "molotov"
        $string83 = "stickybomb"
        $string84 = "proxmine"
        $string85 = "snowball"
        $string86 = "pipebomb"
        $stringa1 = "general_noclip_enabled"
        $stringa2 = "general_noclip_speed"
        $stringa3 = "keybinds_menu_open"
        $stringa4 = "keybinds_aimbot"
        $stringa5 = "aimbot_enabled"
        $stringa6 = "aimbot_draw_selected_bone"
        $stringa7 = "aimbot_selected_bone"
        $stringa8 = "aimbot_selected_bone_color"
        $stringa9 = "aimbot_smooth_enabled"
        $stringa10 = "aimbot_smooth_speed"
        $stringa11 = "aimbot_draw_fov"
        $stringa12 = "aimbot_fov_size"
        $stringa13 = "aimbot_fov_color"
        $stringa14 = "vehicles_enabled"
        $stringa15 = "vehicles_range"
        $stringa16 = "vehicles_enable_vehicle_count"
        $stringa17 = "players_enabled"
        $stringa18 = "players_range"
        $stringa19 = "players_bones_enabled"
        $stringa20 = "players_bones_color"
        $stringa21 = "players_box_enabled"
        $stringa22 = "players_box_type"
        $stringa23 = "players_box_color"
        $stringa24 = "players_health_bar_enabled"
        $stringa25 = "players_health_bar_type"
        $stringa26 = "players_health_bar_color"
        $stringa27 = "players_armor_bar_enabled"
        $stringa28 = "players_armor_bar_type"
        $stringa29 = "players_armor_bar_color"
        $stringa30 = "players_weapon_enabled"
        $stringa31 = "players_weapon_color"
        $stringa32 = "players_distance_enabled"
        $stringa33 = "players_distance_color"
        $stringa34 = "players_enable_player_count"
        $stringa35 = "players_enable_admin_count"
        $stringa36 = "triggerbot_respect_weapon_range"
$stringa37 = "misc_font_esp_style"
$stringa38 = "aimbot_respect_weapon_range"

    condition:
        6 of them
}
rule xrc_or_genericcheat {
    strings:
        $xrc_specific1 = "(Auto-disabled ImGuiDebugLogFlags_EventClipper to avoid spamming)"
        $xrc_specific2 = "r\\x64\\Release\\Fivem-External.pdb"
        $xrc_specific3 = "flag-checkered"
        $xrc_specific4 = "_get_stream_buffer_pointers"

        $xrc_hex_string1 = { 28  41  75  74  6F  2D  64  69  73  61  62  6C  65  64  20  49  6D  47  75  69  44  65  62  75  67  4C  6F  67  46  6C  61  67 73  5F  45  76  65  6E  74  43  6C  69  70  70  65  72  20  74 6F  20  61  76  6F  69  64  20  73  70  61  6D  6D  69  6E  67 29 }
        $xrc_hex_string2 = { 72  5C  78  36  34  5C  52  65  6C  65  61  73  65  5C  46  69 76  65  6D  2D  45  78  74  65  72  6E  61  6C  2E  70  64  62 }
        $xrc_hex_string3 = { 66  6C  61  67  2D  63  68  65  63  6B  65  72  65  64 }
        $xrc_hex_string4 = { 5F  67  65  74  5F  73  74  72  65  61  6D  5F  62  75  66  66  65 72  5F  70  6F  69  6E  74  65  72  73 }

        $xrc_match_string1 = "<security>"
        $xrc_match_string2 = "<requestedPrivileges>"
        $xrc_match_string3 = "</security>"
        $xrc_match_string4 = "<requestedExecutionLevel level='requireAdministrator' uiAccess='false' />"

    condition:
        (2 of ($xrc_specific*) and 2 of ($xrc_hex_string*) and 1 of ($xrc_match_string*))
}
rule kobra_free_cheat {
strings:
    $kobra_specific1 = "Cheat Info"
    $kobra_specific2 = "This is a FREE CHEAT"

condition:
    any of them
}
rule  TZ_stable {
strings:
  $manifest1 = "<requestedExecutionLevel level='asInvoker' uiAccess='false' />" ascii wide 
  $manifest2 = "<security>" ascii wide
    $manifest3 = "</security>" ascii wide
     $manifest4 = "</requestedPrivileges>" ascii wide
    





    $tz_specific1 = "Dn[x3" fullword ascii
    $tz_specific2 = "mky]}Xi" fullword ascii
    $tz_specific3 = "mv4TI61E" fullword ascii
    $tz_specific4 = "nC_DF" fullword ascii
    $tz_specific5 = "nKQNzh" fullword ascii
    $tz_specific6 = "nRcog" fullword ascii
    $tz_specific7 = "nVE3G" fullword ascii
    $tz_specific8 = "nbgzsZ" fullword ascii
    $tz_specific9 = "ndQ7+s" fullword ascii
    $tz_specific10 = "nmT8k" fullword ascii
    condition:
     all of them
}
rule Generic_A {
   strings:
      $s1 = "        <requestedExecutionLevel level='asInvoker' uiAccess='false' />" fullword ascii
      $s2 = "W1,$_@" fullword ascii
      $s3 = "14$_A:" fullword ascii
      $s4 = "AR1,$L" fullword ascii
      $s5 = "AR1,$D" fullword ascii
      $s6 = "1<$A[A" fullword ascii
      $s7 = "1,$_fA" fullword ascii
      $s8 = "W1,$fA" fullword ascii
      $s9 = "$A[fE;" fullword ascii
      $s10 = "AR1,$I" fullword ascii
      $s11 = "14$]Hc" fullword ascii
      $s12 = "U14$fD" fullword ascii
      $s13 = "AR1,$A" fullword ascii
      $s14 = "AR1<$AZ@" fullword ascii
      $s15 = "1<$AZHc" fullword ascii
      $s16 = "AS1,$A[@" fullword ascii
      $s17 = "$A[fD;" fullword ascii
      $s18 = "1,$fD#" fullword ascii
      $s19 = "AR1<$fA" fullword ascii
      $s20 = "AR1,$AZHc" fullword ascii
   condition:
      ( uint16(0) == 0x5a4d and filesize < 20000KB and ( 8 of them )
      ) or ( all of them )
}

rule Generic_B {
   strings:
      $s1 = "h.rsrc" fullword ascii
      $s2 = "AS1,$A" fullword ascii
      $s3 = ".AaVXM" fullword ascii
      $s4 = "AS1<$I" fullword ascii
      $s5 = "AS1,$A[Hc" fullword ascii
      $s6 = "1<$A[Hc" fullword ascii
      $s7 = "Oh4e1z" fullword ascii
      $s8 = "AS1,$fE" fullword ascii
      $s9 = "AS1<$A" fullword ascii
      $s10 = "1,$A[A" fullword ascii
      $s11 = "1<$fA#" fullword ascii
      $s12 = "AS1,$A[" fullword ascii
      $s13 = "1,$_Hc" fullword ascii
      $s14 = "1,$A[Hc" fullword ascii
      $s15 = "AS1<$fA" fullword ascii
      $s16 = "AS1,$fA" fullword ascii
      $s17 = "14$_Hc" fullword ascii
   condition:
      ( uint16(0) == 0x5a4d and filesize < 20000KB and ( 8 of them )
      ) or ( all of them )
}

rule Generic_C {
   strings:
      $s1 = "V1<$fA" fullword ascii
      $s2 = "e14$AYHc" fullword ascii
      $s3 = "V1<$fD" fullword ascii
      $s4 = "V1<$^H" fullword ascii
      $s5 = "81<$fA" fullword ascii
      $s6 = "14$AYHc" fullword ascii
      $s7 = "$AYfD;" fullword ascii
      $s8 = "V1<$^Hc" fullword ascii
      $s9 = "O1<$fE" fullword ascii
      $s10 = "W1,$_fA" fullword ascii
      $s11 = "AQ14$A" fullword ascii
      $s12 = "1<$^Hc" fullword ascii
      $s13 = "AQ14$AY" fullword ascii
      $s14 = "AZA[fA" fullword ascii
      $s15 = "AQ14$D" fullword ascii
      $s16 = "V1<$^f" fullword ascii
      $s17 = "$AYfA;" fullword ascii
      $s18 = "AYA^fD" fullword ascii
      $s19 = "1<$fE3" fullword ascii
      $s20 = "1<$^E:" fullword ascii
   condition:
      ( uint16(0) == 0x5a4d and filesize < 20000KB and ( 8 of them )
      ) or ( all of them )
}

rule Generic_D {
   strings:
      $s1 = "1<$[Hc" fullword ascii
      $s2 = "S1<$fA" fullword ascii
      $s3 = "AS1<$A[Hc" fullword ascii
      $s4 = "14$_E:" fullword ascii
      $s5 = "$A[fA;" fullword ascii
      $s6 = "W14$_H" fullword ascii
      $s7 = "1<$]Hc" fullword ascii
      $s8 = "W14$_Hc" fullword ascii
      $s9 = "W14$_fD;" fullword ascii
      $s10 = "S1<$[Hc" fullword ascii
      $s11 = "S1<$Hc" fullword ascii
      $s12 = "U1<$fA" fullword ascii
      $s13 = "W1,$_A" fullword ascii
      $s14 = "AS1<$fD" fullword ascii
      $s15 = "1<$fE+" fullword ascii
   condition:
      ( uint16(0) == 0x5a4d and filesize < 20000KB and ( 8 of them )
      ) or ( all of them )
}
rule Nullx32_v1 {
    meta:
        author = "/alsia "
    strings:
        $stringExe = "!This program cannot be run in DOS mode."
        $string1 = "\\config\\config.json"
        $string2 = "Enabled##Aimbot"
        $string3 = "Style##PedVisualsBox"
    condition:
        all of them
}
rule ProcessHollowing_v1 {
    strings:
        $a = "process hollowing" wide ascii
    condition:
        $a
}

rule ProcessHollowing_v2 {
    strings:
        $a = "processhollowing" wide ascii
    condition:
        $a
}

rule ProcessHollowing_v3 {
    strings:
        $a = "hollowing process" wide ascii
    condition:
        $a
}

rule ProcessHollowing_v4 {
    strings:
        $a = "process hollowed" wide ascii
    condition:
        $a
}
rule Eulen_v1 {
    strings:
        $stringEXE = "This program cannot be run in DOS mode"
        $string1 = "D3D11CreateDeviceAndSwapChain"
        $string2 = "d3d11.dll"
        $string3 = "GetComputerNameA"
        $string4 = "api-ms-win-crt-locale-l1-1-0.dll"
        $string5 = "api-ms-win-crt-time-l1-1-0.dll"
        $string6 = "SHGetKnownFolderPath"
        $string7 = "UuidToStringW"
    condition:
        all of them
}

rule Process_Hollowing_A_v1 {
    strings:
        $dll = "processhollow"
    condition:
        $dll
}

rule Process_Hollowing_B_v1 {
    strings:
        $dll = "Hollowing"
    condition:
        $dll
}
rule MindsellingCleaner_v1 {
    strings:
        $stringEXE = "This program cannot be run in DOS mode"
        $string1 = "MindCleaner.Login.resources"
    condition:
        all of ($stringEXE, $string1)
}

rule unityCrack_v1 {
    strings:
        $unitycrack = "C:\\Users\\User\\Desktop\\source\\@fivem external\\Menu\\x64\\Release\\UrbanVPNUpdater.pdb"
    condition:
        $unitycrack
}

rule nnCheatCleaner {
    strings:
        $nncleaner1 = "VRich"
        $nncleaner2 = "jrEn0aT"
        $nncleaner3 = "t0y4a"
        $nncleaner4 = "PCaDV"
        $nncleaner5 = "suJXiVAABb"
        $nncleaner6 = "WxRLqxzQwqjk1Rkax"
        $nncleaner7 = "U6B8H4Gw4Ti"

        $nncleaner_hex1 = { 0E 1F BA 0E 00 B4 09 CD 21 B8 01 4C CD 21 54 68 }
        $nncleaner_hex2 = { 7B 73 87 87 C3 BC 4C 90 C2 70 C3 52 C2 49 7A 73 }
        $nncleaner_hex3 = { 71 62 BA 51 C2 4F 71 48 57 41 70 C2 65 65 33 BC }

    condition:
        all of ($nncleaner1, $nncleaner2, $nncleaner3, $nncleaner4, $nncleaner5, $nncleaner6, $nncleaner7) and
        any of ($nncleaner_hex1, $nncleaner_hex2, $nncleaner_hex3)
}

rule xerecao_src_cheat_v1 {
    strings:
        $xeracao1 = "C:\\Users\\MTD\\Desktop\\Area trabalho 3\\external\\external\\Cutiehook-Recode\\x64\\Release\\Cutiehook-Recode.pdb"
        $xeracao2 = "https://www.xerecao.com.br"
        $xeracao3 = "start https://discord.gg/veax"
        $xeracao4 = "start https://www.youtube.com/@Stoned1337./featured"
        $xeracao5 = "Waiting FiveM!" 
        $xeracao6 = "Show Aimbot FOV"  

    condition:
        any of them
}

rule xrc_2025_february {
    strings:
        $xrcnew1 = "C:\\builds\\kragle\\lego\\build\\x64\\logi\\system_tray\\win\\Generated Files\\winrt/Microsoft.UI.Xaml.Data.h"
        $xrcnew2 = "C:\\builds\\kragle\\lego\\build\\x64\\logi\\system_tray\\win\\Generated Files\\winrt/Microsoft.UI.Xaml.Media.h"
        $xrcnew3 = "C:\\builds\\kragle\\lego\\build\\x64\\logi\\system_tray\\win\\Generated Files\\winrt/base.h"
    
    condition:
        any of them
}

rule lithiummenucheat {
    strings:
        $lithiummenu1 = "C:\\Users\\wofu\\Desktop\\Console menu\\trackingcheat\\trackingcheat\\x64\\Release\\Fivem-External.pdb"
        $lithiummenu2 = "Sucess authentication, Injeting in moments..."
        $lithiummenu3 = "?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A"

    condition: 
        any of them
}

}

rule aorist_external {
    strings:
        $aorist1 = "C:\\Users\\km.read\\Downloads\\Wombo\\Wombo\\x64\\Release\\OBS Studio.pdb"
        $aorist2 = "Aorist"
    condition:
        any of them
}

rule illegal_rpf_olabilir {
    strings:
        
    $illegalrpf1 = "weaponcomponents.meta"
    $illegalrpf2 = "weaponanimations.meta"
    $illegalrpf3 = "daccuracy.meta"
    $illegalrpf4 = "pedaccuracy.meta"
    condition:
      any of them
}
rule Privazer_free {
 
    strings:
        $privazer1 = "privazer_remover.exe"
        $privazer2 = "PrivaZer.exe"
        $privazer3 = "[-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Tracing\\privazer_free.exe_RASAPI32]"
    condition:
        any of them
}

rule ccleaner {
    strings:
        $ccleaner1 = "CCleaner"
        $ccleaner2 = "CCleaner Installer"
    condition:
        any of them
}

rule macho_cheat {

	strings:
		$macho1 = "https://machocheats.com/cgi-bin/client-backend2.cgi"
$macho2 = "https://www.machocheats.com/"
$macho3 = "This loader client is outdated. Please download the latest loader from www.machocheats.com"
$macho4 = "https://www.machocheats.com/discord"
$macho5 = "Please move the Loader's executable to a folder that is not Virtual (OneDrive etcetera)."

	condition:
		any of them
}
rule BASE64_table {
	meta:
		author = "_pusher_"
		description = "Look for Base64 table"
		date = "2015-07"
		version = "0.1"
	strings:
		$c0 = { 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 50 51 52 53 54 55 56 57 58 59 5A 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A 30 31 32 33 34 35 36 37 38 39 2B 2F }
	condition:
		$c0
}
rule chrombatbypass {
	strings:
        $chromebatbypass = "del /s /f /q %systemdrive%\\$Recycle.Bin\\*.*"
	condition:
		$chromebatbypass

}
rule taskiller {
	strings:
		$taskiller = "taskkill"
	condition:
		$taskiller
	}
    rule servicekiller {
	strings:
		$servicekiller = "net stop"
        $servicekiller2 = "sc stop"
	condition:
		$servicekiller or $servicekiller2
	}
	
    rule paketli  {
	strings:
        $paketlidosya0 = "@.nigga0"
        $paketlidosya1 = "`.nigga1"
        
        condition:
            any of them
    }

rule VMProtect {
    condition:
        pe.is_pe and
        for any s in pe.sections : (
            s.name endswith "0"
        ) and
        for any s in pe.sections : (
            s.name endswith "1"
        ) and
        for any s in pe.sections : (
            s.name endswith "2"
        )
}

rule UPX_Packed_File
{
    strings:
        $upx_sig = "UPX!"
        $upx_magic = { 55 50 58 21 }               /* "UPX!" magic bytes */
        $upx_header = { 55 50 58 30 00 00 00 00 }  /* "UPX0" section header */

    condition:
        uint16(0) == 0x5A4D and   /* MZ header (PE) */
        for any i in (0..pe.number_of_sections - 1) : (
            pe.sections[i].name == "UPX0"
        ) and
        for any i in (0..pe.number_of_sections - 1) : (
            pe.sections[i].name == "UPX1"
        ) and
        any of ($upx_sig, $upx_magic, $upx_header)
}
rule bypassolabilirorospucocugu {
    strings:
        $s1 = "LenovoDiagnosticsDriver"
        $s2 = "C:\\Windows\\System32\\sru\\SRUDB.dat"
        $s3 = "C:\\Windows\\System32\\sru"
        $s4 = "taskkill /f /im cmd.exe; taskkill /f /im powershell.exe; exit"
        $s5 = ".Font generated by IcoMoon."
     
    condition:
        any of ($s*)
}
rule Themida_paketli {
    strings:
        $themida_v1 = { 83 EC 04 53 E8 01 00 00 00 CC 58 8B D8 40 }
        $themida_v2 = { 48 83 EC 08 50 53 E8 01 00 00 00 CC 58 48 89 C3 48 }
        $themida_winlicense = { 8B C5 8B D4 60 E8 00 00 00 00 5D 81 ED }
        $section_themida = ".themida" ascii
        $section_winlicense = ".winlice" ascii
    condition:
        uint16(0) == 0x5A4D and (
            $section_themida or
            $section_winlicense or
            any of ($themida_*)
        )
}
rule skript {
    strings:
        $masonjack1 = "C:\\Users\\dev\\Desktop\\projects\\Skript\\sk_launcher\\x64\\Release\\sk_launcher.pdb"

    condition:
        any of ($masonjack*)
}
rule PowerShell_Injection {
    strings:
        $net_webclient = "Net.WebClient"
        $download = "DownloadData"
        $virtual_alloc = "VirtualAllocEx"
        $write_mem = "WriteProcessMemory"
        $create_thread = "CreateRemoteThread"
        $defender_disable = "DefenderControlHealthCheck"
        $edge_disable = "MSEDGEHEALTHCHECK"
        
    condition:
        4 of them and
        ($net_webclient and $download)
}
rule assembly_readallbytes {
    strings:
        $string1 = {46 00 69 00 6C 00 65 00 5D 00 3A 00 3A 00 52 00 65 00 61 00 64 00 41 00 6C 00 6C 00 42 00 79 00 74 00 65 00 73}
    condition:
        any of them
}
rule filestream_open {
    strings:
        $string1 = {24 00 66 00 69 00 6C 00 65 00 53 00 74 00 72 00 65 00 61 00 6D}
    condition:
        any of them
}
rule system_net_web {
    strings:
        $string1 = {5B 00 53 00 79 00 73 00 74 00 65 00 6D 00 2E 00 4E 00 65 00 74 00 2E 00 57 00 65 00 62}
    condition:
        any of them
}
rule system_net_http_client {
    strings:
        $string1 = {53 00 79 00 73 00 74 00 65 00 6D 00 2E 00 4E 00 65 00 74 00 2E 00 48 00 74 00 74 00 70 00 2E 00 48 00 74 00 74 00 70 00 43 00 6C 00 69 00 65 00 6E 00 74 00}
    condition:
        any of them
}
rule system_io_file_writeallbytes {
    strings:
        $string1 = {5B 00 53 00 79 00 73 00 74 00 65 00 6D 00 2E 00 49 00 4F 00 2E 00 46 00 69 00 6C 00 65 00 5D 00 3A 00 3A 00 57 00 72 00 69 00 74 00 65 00 41 00 6C 00 6C 00 42 00 79 00 74 00 65 00 73}
    condition:
        any of them
}
rule webclient_dot_download_data {
    strings:
        $string1 = {2E 00 44 00 6F 00 77 00 6E 00 6C 00 6F 00 61 00 64 00 44 00 61 00 74 00 61 00 28}
    condition:
        any of them
}
rule webclient_dot_download_file {
    strings:
        $string1 = {44 00 6F 00 77 00 6E 00 6C 00 6F 00 61 00 64 00 46 00 69 00 6C 00 65 00 28}
    condition:
        any of them
}
rule invoke_request {
    strings:
        $string1 = {49 00 6E 00 76 00 6F 00 6B 00 65 00 2D 00 57 00 65 00 62 00 52 00 65 00 71 00 75 00 65 00 73 00 74 00}
    condition:
        any of them
}
rule get_utf_getstring {
    strings:
        $string1 = {55 00 54 00 46 00 38 00 2E 00 47 00 65 00 74 00 53 00 74 00 72 00 69 00 6E 00 67 00 28 00 28}
    condition:
        any of them
}
rule from_base_64_string {
    strings:
        $string1 = {46 00 72 00 6F 00 6D 00 42 00 61 00 73 00 65 00 36 00 34 00 53 00 74 00 72 00 69 00 6E 00 67 00 28}
    condition:
        any of them
}
rule execution_policy_bypass {
    strings:
        $string1 = {45 00 78 00 65 00 63 00 75 00 74 00 69 00 6F 00 6E 00 50 00 6F 00 6C 00 69 00 63 00 79 00 20 00 42 00 79 00 70 00 61 00 73 00 73 00}
    condition:
        any of them
}
rule history_history_nosave {
    strings:
        $string1 = {2D 00 48 00 69 00 73 00 74 00 6F 00 72 00 79 00 53 00 61 00 76 00 65 00 53 00 74 00 79 00 6C 00 65 00 20 00 53 00 61 00 76 00 65 00 4E 00 6F 00 74 00 68 00 69 00 6E 00 67 00}
    condition:
        any of them
}
rule force_delete_console_history {
    strings:
        $string1 = {43 00 6F 00 6E 00 73 00 6F 00 6C 00 65 00 48 00 6F 00 73 00 74 00 5F 00 68 00 69 00 73 00 74 00 6F 00 72 00 79 00 2E 00 74 00 78 00 74 00 22 00 20 00 2D 00 46 00 6F 00 72 00 63 00}
    condition:
        any of them
}
rule consolehost_history {
    strings:
        $string1 = {43 00 6F 00 6E 00 73 00 6F 00 6C 00 65 00 48 00 6F 00 73 00 74 00 5F 00 68 00 69 00 73 00 74 00 6F 00 72 00 79 00 2E 00 74 00 78 00 74}
    condition:
        any of them
}
rule virtual_alloc_ex {
    strings:
        $string1 = {56 00 69 00 72 00 74 00 75 00 61 00 6C 00 41 00 6C 00 6C 00 6F 00 63 00 45 00}
    condition:
        any of them
}

rule write_process_memory {
    strings:
        $string1 = {57 00 72 00 69 00 74 00 65 00 50 00 72 00 6F 00 63 00 65 00 73 00 73 00 4D 00 65 00 6D 00 6F 00 72 00 79 00 28}
    condition:
        any of them
}
rule create_remote_thread {
    strings:
        $string1 = {43 00 72 00 65 00 61 00 74 00 65 00 52 00 65 00 6D 00 6F 00 74 00 65 00 54 00 68 00 72 00 65 00 61 00 64 00 28}
    condition:
        any of them
}
rule dash_outfile {
    strings:
        $string1 = {00 2D 00 4F 00 75 00 74 00 46 00 69 00 6C 00 65}
    condition:
        any of them
}
rule get_process_by_name {
    strings:
        $string1 = {47 00 65 00 74 00 2D 00 50 00 72 00 6F 00 63 00 65 00 73 00 73 00 20 00 2D 00 4E 00 61 00 6D 00 65}
    condition:
        any of them
}
rule shell_execute {
    strings:
        $string1 = {53 00 68 00 65 00 6C 00 6C 00 45 00 78 00 65 00 63 00 75 00 74 00 65 00 28 00}
    condition:
        any of them
}
rule assembly_load {
    strings:
        $string1 = {00 41 00 73 00 73 00 65 00 6D 00 62 00 6C 00 79 00 5D 00 3A 00 3A 00 4C 00 6F 00 61 00 64 00 28}
    condition:
        any of them
}
